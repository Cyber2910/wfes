1c1,2
< def extract(times, sizes, features):
---
> def extract(times, sizes):
>     features = []
94a96,114
> 
>     return features
> 
>     
> if __name__ == '__main__':
>     #this takes quite a while
>     for site in range(0, 100):
>         #print site
>         for instance in range(0, 90):
>             fname = str(site) + "-" + str(instance)
>             #Set up times, sizes
>             f = open("batch/" + fname, "r")
>             times = []
>             sizes = []
>             for x in f:
>                 x = x.split("\t")
>                 times.append(float(x[0]))
>                 sizes.append(int(x[1]))
>             f.close()
96,100c116,128
< #this takes quite a while
< for site in range(0, 100):
<     #print site
<     for instance in range(0, 90):
<         fname = str(site) + "-" + str(instance)
---
>             #Extract features. All features are non-negative numbers or X. 
>             features = []
>             extract(times, sizes, features)
>     
>             fout = open("batch/" + fname + "f", "w")
>             for x in features:
>                 fout.write(repr(x) + " ")
>             fout.close()
>     
>     #open world
>     for site in range(0, 9000):
>         #print site
>         fname = str(site)
110c138
< 
---
>     
114c142
< 
---
>     
119,131c147,150
< 
< #open world
< for site in range(0, 9000):
<     #print site
<     fname = str(site)
<     #Set up times, sizes
<     f = open("batch/" + fname, "r")
<     times = []
<     sizes = []
<     for x in f:
<         x = x.split("\t")
<         times.append(float(x[0]))
<         sizes.append(int(x[1]))
---
>     
>     f = open("fdetails", "w")
>     f.write(str(len(features)))
>     print len(features)
133,146d151
< 
<     #Extract features. All features are non-negative numbers or X. 
<     features = []
<     extract(times, sizes, features)
< 
<     fout = open("batch/" + fname + "f", "w")
<     for x in features:
<         fout.write(repr(x) + " ")
<     fout.close()
< 
< f = open("fdetails", "w")
< f.write(str(len(features)))
< print len(features)
< f.close()
